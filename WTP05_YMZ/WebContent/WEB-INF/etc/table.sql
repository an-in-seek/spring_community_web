한번지워봐
/* 회원 */
CREATE TABLE MEMBER (
	MEMBER_ID VARCHAR2(10) NOT NULL, /* 회원_ID */
	MEMBER_PASSWORD VARCHAR2(10) NOT NULL, /* 회원 비밀번호 */
	NAME VARCHAR2(30) NOT NULL, /* 회원 이름 */
	NICKNAME VARCHAR2(30) NOT NULL, /* 닉네임 */
	BIRTH VARCHAR2(12) NOT NULL, /* 생일 */
	SEX VARCHAR2(4) NOT NULL, /* 성별 */
	ZIPCODE VARCHAR2(10) NOT NULL, /* 우편번호 */
	ADDRESS VARCHAR2(100) NOT NULL, /* 주소 */
	DETAIL_ADDRESS VARCHAR2(100) NOT NULL, /* 상세주소 */
	EMAIL VARCHAR2(100) NOT NULL, /* 이메일 */
	PHONE_NO VARCHAR2(20) NOT NULL, /* 전환번호 */
	FAVORITE_FOOD VARCHAR2(30), /* 선호음식 */
	MILEAGE NUMBER(10) NOT NULL, /* 마일리지 */
	GRADE VARCHAR2(10) NOT NULL, /* 등급 */
	JOINDATE VARCHAR2(8) NOT NULL /* 가입일 */
);

ALTER TABLE MEMBER
	ADD
		CONSTRAINT PK_MEMBER
		PRIMARY KEY (
			MEMBER_ID
		);

/* 맛집 */
CREATE TABLE RESTAURANT (
	RESTAURANT_NO NUMBER(10) NOT NULL, /* 맛집 번호 */
	RESTAURANT_NAME VARCHAR2(30) NOT NULL, /* 맛집 이름 */
	CATEGORY VARCHAR2(12) NOT NULL, /* 분류 */
	PHONE_NO VARCHAR2(20) NOT NULL, /* 전화번호 */
	ADDRESS VARCHAR2(100) NOT NULL, /* 주소 */
	DESCRIPTION BLOB NOT NULL, /* 설명 */
	PICTURE_NAME VARCHAR2(70), /* 사진 이름 */
	SCORE NUMBER(2) NOT NULL, /* 평점 */
	HITS NUMBER(10) NOT NULL, /* 조회수 */
	THEME VARCHAR2(12) NOT NULL, /* 테마 */
	DATE VARCHAR2(8) NOT NULL, /* 등록일 */
	REPLY_COUNT NUMBER(4) NOT NULL, /* 댓글수 */
	BUILDING_NAME VARCHAR2(30) NOT NULL, /* 건물이름 */
	FLOOR VARCHAR2(2) NOT NULL /* 층수 */
);

ALTER TABLE RESTAURANT
	ADD
		CONSTRAINT PK_RESTAURANT
		PRIMARY KEY (
			RESTAURANT_NO
		);

/* 음식 */
CREATE TABLE FOOD (
	FOOD_NO NUMBER(10) NOT NULL, /* 음식번호 */
	FOOD_NAME VARCHAR2(30) NOT NULL, /* 음식이름 */
	FOOD_PRICE NUMBER(10) NOT NULL, /* 음식가격 */
	FOOD_DESCRIPTION BLOB NOT NULL, /* 음식설명 */
	RESTAURANT_NO NUMBER(10) NOT NULL /* 맛집 번호 */
);

ALTER TABLE FOOD
	ADD
		CONSTRAINT PK_FOOD
		PRIMARY KEY (
			FOOD_NO
		);

/* 맛집_댓글 */
CREATE TABLE RESTAURANT_REPLY (
	RESTAURANT_REPLY_NO NUMBER(10) NOT NULL, /* 맛집 댓글 번호 */
	DATE VARCHAR2(8) NOT NULL, /* 등록일 */
	CONTENT BLOB NOT NULL, /* 내용 */
	SCORE NUMBER(2) NOT NULL, /* 평점 */
	MEMBER_ID VARCHAR2(10) NOT NULL, /* 회원_ID */
	RESTAURANT_NO NUMBER(10) NOT NULL /* 맛집게시물번호 */
);

ALTER TABLE RESTAURANT_REPLY
	ADD
		CONSTRAINT PK_RESTAURANT_REPLY
		PRIMARY KEY (
			RESTAURANT_REPLY_NO
		);

/* 맛집 리뷰 */
CREATE TABLE REVIEW (
	REVIEW_NO NUMBER(10) NOT NULL, /* 리뷰 번호 */
	TITLE VARCHAR2(60) NOT NULL, /* 제목 */
	CONTENT BLOB NOT NULL, /* 내용 */
	PICTURE_NAME VARCHAR2(70), /* 사진_이름 */
	HITS NUMBER(10) NOT NULL, /* 조회수 */
	RECOMMEND NUMBER(4) NOT NULL, /* 추천수 */
	DATE VARCHAR2(8) NOT NULL, /* 등록일 */
	MEMBER_ID VARCHAR2(10) NOT NULL /* 회원_ID */
);

ALTER TABLE REVIEW
	ADD
		CONSTRAINT PK_REVIEW
		PRIMARY KEY (
			REVIEW_NO
		);

/* 리뷰_댓글 */
CREATE TABLE REVIEW_REPLY (
	REVIEW_REPLY_NO NUMBER(10) NOT NULL, /* 리뷰댓글번호 */
	DATE VARCHAR2(8) NOT NULL, /* 등록일 */
	CONTENT BLOB NOT NULL, /* 내용 */
	MEMBER_ID VARCHAR2(10) NOT NULL, /* 회원_ID */
	REVIEW_NO NUMBER(10) NOT NULL /* 리뷰 번호 */
);

ALTER TABLE REVIEW_REPLY
	ADD
		CONSTRAINT PK_REVIEW_REPLY
		PRIMARY KEY (
			REVIEW_REPLY_NO
		);

/* 신고당한 맛집 */
CREATE TABLE REPORTED_RESTAURANT (
	NO NUMBER(10) NOT NULL, /* 게시물 번호 */
	CATEGORY VARCHAR2(12) NOT NULL, /* 분류 */
	BBS_NO NUMBER(10) NOT NULL, /* 게시판 번호 */
	STATE VARCHAR2(12) NOT NULL, /* 상태 */
	REASON VARCHAR2(12) NOT NULL, /* 이유 */
	REPORTER_ID VARCHAR2(10) /* 신고자_ID */
);

ALTER TABLE REPORTED_RESTAURANT
	ADD
		CONSTRAINT PK_REPORTED_RESTAURANT
		PRIMARY KEY (
			NO
		);

/* 신고당한 리뷰 */
CREATE TABLE REPORTED_REVIEW (
	NO NUMBER(10) NOT NULL, /* 게시물 번호 */
	CATEGORY VARCHAR2(12) NOT NULL, /* 분류 */
	BBS_NO NUMBER(10) NOT NULL, /* 게시판 번호 */
	STATE VARCHAR2(12) NOT NULL, /* 상태 */
	REASON VARCHAR2(12) NOT NULL, /* 이유 */
	REPORTER_ID VARCHAR2(10) /* 신고자_ID */
);

ALTER TABLE REPORTED_REVIEW
	ADD
		CONSTRAINT PK_REPORTED_REVIEW
		PRIMARY KEY (
			NO
		);

/* 신고당한 댓글 */
CREATE TABLE REPORTED_REPLY (
	NO NUMBER(10) NOT NULL, /* 댓글 번호 */
	CATEGORY VARCHAR2(12) NOT NULL, /* 분류 */
	CONTENT BLOB NOT NULL, /* 내용 */
	STATE VARCHAR2(12) NOT NULL, /* 상태 */
	REASON VARCHAR2(12) NOT NULL, /* 이유 */
	REPORTER_ID VARCHAR2(10) /* 신고자 id */
);

ALTER TABLE REPORTED_REPLY
	ADD
		CONSTRAINT PK_REPORTED_REPLY
		PRIMARY KEY (
			NO
		);

/* 자주 묻는 질문과 답변 */
CREATE TABLE FAQ (
	NO NUMBER(10) NOT NULL, /* 게시물 번호 */
	TITLE VARCHAR2(60) NOT NULL, /* 제목 */
	CONTENT BLOB NOT NULL /* 내용 */
);

ALTER TABLE FAQ
	ADD
		CONSTRAINT PK_FAQ
		PRIMARY KEY (
			NO
		);

/* 질문과답변 */
CREATE TABLE QNA (
	NO NUMBER(10) NOT NULL, /* 게시물 번호 */
	TITLE VARCHAR2(60) NOT NULL, /* 제목 */
	CATEGORY VARCHAR2(12) NOT NULL, /* 카테고리 */
	REGISTRATION_DATE VARCHAR2(8) NOT NULL, /* 등록일 */
	HITS NUMBER(10) NOT NULL, /* 조회수 */
	CONTENT BLOB NOT NULL, /* 내용 */
	MEMBER_ID VARCHAR2(10) NOT NULL /* 회원_ID */
);

ALTER TABLE QNA
	ADD
		CONSTRAINT PK_QNA
		PRIMARY KEY (
			NO
		);

ALTER TABLE FOOD
	ADD
		CONSTRAINT FK_RESTAURANT_TO_FOOD
		FOREIGN KEY (
			RESTAURANT_NO
		)
		REFERENCES RESTAURANT (
			RESTAURANT_NO
		);

ALTER TABLE RESTAURANT_REPLY
	ADD
		CONSTRAINT FK_RESTAURANT_TO_RESTAURANT_REPLY
		FOREIGN KEY (
			RESTAURANT_NO
		)
		REFERENCES RESTAURANT (
			RESTAURANT_NO
		);

ALTER TABLE RESTAURANT_REPLY
	ADD
		CONSTRAINT FK_MEMBER_TO_RESTAURANT_REPLY
		FOREIGN KEY (
			MEMBER_ID
		)
		REFERENCES MEMBER (
			MEMBER_ID
		);

ALTER TABLE REVIEW
	ADD
		CONSTRAINT FK_MEMBER_TO_REVIEW
		FOREIGN KEY (
			MEMBER_ID
		)
		REFERENCES MEMBER (
			MEMBER_ID
		);

ALTER TABLE REVIEW_REPLY
	ADD
		CONSTRAINT FK_REVIEW_TO_REVIEW_REPLY
		FOREIGN KEY (
			REVIEW_NO
		)
		REFERENCES REVIEW (
			REVIEW_NO
		);

ALTER TABLE REPORTED_RESTAURANT
	ADD
		CONSTRAINT FK_MEMBER_TO_REPORTED_RESTAURANT
		FOREIGN KEY (
			REPORTER_ID
		)
		REFERENCES MEMBER (
			MEMBER_ID
		);

ALTER TABLE REPORTED_REVIEW
	ADD
		CONSTRAINT FK_MEMBER_TO_REPORTED_REVIEW
		FOREIGN KEY (
			REPORTER_ID
		)
		REFERENCES MEMBER (
			MEMBER_ID
		);

ALTER TABLE REPORTED_REPLY
	ADD
		CONSTRAINT FK_MEMBER_TO_REPORTED_REPLY
		FOREIGN KEY (
			REPORTER_ID
		)
		REFERENCES MEMBER (
			MEMBER_ID
		);

ALTER TABLE QNA
	ADD
		CONSTRAINT FK_MEMBER_TO_QNA
		FOREIGN KEY (
			MEMBER_ID
		)
		REFERENCES MEMBER (
			MEMBER_ID
		);