/* 회원 */
DROP TABLE MEMBER 
	CASCADE CONSTRAINTS;

/* 맛집 */
DROP TABLE RESTAURANT 
	CASCADE CONSTRAINTS;

/* 음식 */
DROP TABLE FOOD 
	CASCADE CONSTRAINTS;

/* 맛집_댓글 */
DROP TABLE RESTAURANT_REPLY 
	CASCADE CONSTRAINTS;

/* 맛집 리뷰 */
DROP TABLE REVIEW 
	CASCADE CONSTRAINTS;

/* 리뷰_댓글 */
DROP TABLE REVIEW_REPLY 
	CASCADE CONSTRAINTS;
	
/* 리뷰_추천 */
DROP TABLE REVIEW_RECOMMEND
	CASCADE CONSTRAINTS;

/* 신고당한 맛집 */
DROP TABLE REPORTED_RESTAURANT 
	CASCADE CONSTRAINTS;

/* 신고당한 리뷰 */
DROP TABLE REPORTED_REVIEW 
	CASCADE CONSTRAINTS;

/* 신고당한 댓글 */
DROP TABLE REPORTED_REPLY 
	CASCADE CONSTRAINTS;

/* 자주 묻는 질문과 답변 */
DROP TABLE FAQ 
	CASCADE CONSTRAINTS;

/* 질문과답변 */
DROP TABLE QNA 
	CASCADE CONSTRAINTS;

/* 새 테이블 */
DROP TABLE LOCATION 
	CASCADE CONSTRAINTS;
	
/* 카테고리 테이블1 */
DROP TABLE FIRST_CATEGORY
	CASCADE CONSTRAINTS;
	
/* 카테고리 테이블2 */
DROP TABLE SECOND_CATEGORY
	CASCADE CONSTRAINTS;
	
/* 회원 */
CREATE TABLE MEMBER (
	MEMBER_ID VARCHAR2(11) NOT NULL, /* 회원_ID */
	MEMBER_PASSWORD VARCHAR2(24) NOT NULL, /* 회원 비밀번호 */
	NAME VARCHAR2(30) NOT NULL, /* 회원 이름 */
	NICKNAME VARCHAR2(30) NOT NULL, /* 닉네임 */
	BIRTH VARCHAR2(30) NOT NULL, /* 생일 */
	SEX VARCHAR2(4) NOT NULL, /* 성별 */
	ZIPCODE VARCHAR2(10) NOT NULL, /* 우편번호 */
	ADDRESS VARCHAR2(120) NOT NULL, /* 주소 */
	DETAIL_ADDRESS VARCHAR2(100) NOT NULL, /* 상세주소 */
	EMAIL VARCHAR2(100) NOT NULL, /* 이메일 */
	PHONE_NO VARCHAR2(20) NOT NULL, /* 전환번호 */
	FAVORITE_FOOD VARCHAR2(30), /* 선호음식 */
	MILEAGE NUMBER(10) NOT NULL, /* 마일리지 */
	GRADE VARCHAR2(10) NOT NULL, /* 등급 */
	JOIN_DATE VARCHAR2(8) NOT NULL, /* 가입일 */
	STATE VARCHAR2(6) NOT NULL /* 상태 */
);

ALTER TABLE MEMBER
	ADD
		CONSTRAINT PK_MEMBER
		PRIMARY KEY (
			MEMBER_ID
		);

/* 맛집 */
CREATE TABLE RESTAURANT (
	RESTAURANT_NO NUMBER(10) NOT NULL, /* 맛집 번호 */
	RESTAURANT_NAME VARCHAR2(30) NOT NULL, /* 맛집 이름 */
	CATEGORY VARCHAR2(12) NOT NULL, /* 분류 */
	PHONE_NO VARCHAR2(20) NOT NULL, /* 전화번호 */
	DESCRIPTION CLOB NOT NULL, /* 설명 */
	PICTURE_NAME VARCHAR2(80) NOT NULL, /* 사진 이름 */
	SCORE NUMBER(3,1) NOT NULL, /* 총합 */
	HITS NUMBER(10) NOT NULL, /* 조회수 */
	THEME VARCHAR2(30) NOT NULL, /* 테마 */
	REG_DATE VARCHAR2(8) NOT NULL, /* 등록일 */
	REPLY_COUNT NUMBER(4) NOT NULL, /* 댓글수 */
	LOCATION_NO NUMBER(10) NOT NULL, /* 위치번호 */
	MEMBER_ID VARCHAR2(11) NOT NULL/* 회원_ID */
);

ALTER TABLE RESTAURANT
	ADD
		CONSTRAINT PK_RESTAURANT
		PRIMARY KEY (
			RESTAURANT_NO
		);

/* 음식 */
CREATE TABLE FOOD (
	FOOD_NO NUMBER(10) NOT NULL, /* 음식번호 */
	FOOD_NAME VARCHAR2(30) NOT NULL, /* 음식이름 */
	FOOD_PRICE NUMBER(10) NOT NULL, /* 음식가격 */
	FOOD_DESCRIPTION VARCHAR2(100), /* 음식설명 */
	RESTAURANT_NO NUMBER(10) NOT NULL /* 맛집 번호 */
);

ALTER TABLE FOOD
	ADD
		CONSTRAINT PK_FOOD
		PRIMARY KEY (
			FOOD_NO
		);

/* 맛집_댓글 */
CREATE TABLE RESTAURANT_REPLY (
	RESTAURANT_REPLY_NO NUMBER(10) NOT NULL, /* 맛집 댓글 번호 */
	REG_DATE VARCHAR2(8) NOT NULL, /* 등록일 */
	CONTENT CLOB NOT NULL, /* 내용 */
	SCORE NUMBER(2) NOT NULL, /* 평점 */
	MEMBER_ID VARCHAR2(11) NOT NULL, /* 회원_ID */
	RESTAURANT_NO NUMBER(10) NOT NULL /* 맛집게시물번호 */
);

ALTER TABLE RESTAURANT_REPLY
	ADD
		CONSTRAINT PK_RESTAURANT_REPLY
		PRIMARY KEY (
			RESTAURANT_REPLY_NO
		);

/* 맛집 리뷰 */
CREATE TABLE REVIEW (
	REVIEW_NO NUMBER(10) NOT NULL, /* 리뷰 번호 */
	TITLE VARCHAR2(60) NOT NULL, /* 제목 */
	CATEGORY VARCHAR2(12) NOT NULL, /* 새 컬럼 */
	CONTENT CLOB NOT NULL, /* 내용 */
	HITS NUMBER(10) NOT NULL, /* 조회수 */
	RECOMMEND NUMBER(4) NOT NULL, /* 추천수 */
	REG_DATE VARCHAR2(20) NOT NULL, /* 등록일 */
	MEMBER_ID VARCHAR2(11) NOT NULL /* 회원_ID */
);

ALTER TABLE REVIEW
	ADD
		CONSTRAINT PK_REVIEW
		PRIMARY KEY (
			REVIEW_NO
		);

/* 리뷰_댓글 */
CREATE TABLE REVIEW_REPLY (
	REVIEW_REPLY_NO NUMBER(10) NOT NULL, /* 리뷰댓글번호 */
	REG_DATE VARCHAR2(20) NOT NULL, /* 등록일 */
	CONTENT CLOB NOT NULL, /* 내용 */
	MEMBER_ID VARCHAR2(11) NOT NULL, /* 회원_ID */
	REVIEW_NO NUMBER(10) NOT NULL /* 리뷰 번호 */
);

ALTER TABLE REVIEW_REPLY
	ADD
		CONSTRAINT PK_REVIEW_REPLY
		PRIMARY KEY (
			REVIEW_REPLY_NO
		);

/* 신고당한 리뷰 */
CREATE TABLE REPORTED_REVIEW (
	REPORTED_REVIEW_NO NUMBER(10) NOT NULL, /* 게시물 번호 */
	CATEGORY VARCHAR2(12) NOT NULL, /* 분류 */
	BBS_NO NUMBER(10) NOT NULL, /* 리뷰 번호 */
	STATE VARCHAR2(12) NOT NULL, /* 상태 */
	REASON VARCHAR2(18) NOT NULL, /* 이유 */
	REPORTED_DATE VARCHAR2(12) NOT NULL, /* 날짜 */
	REPORTER_ID VARCHAR2(11) NOT NULL /* 신고자_ID */
);

ALTER TABLE REPORTED_REVIEW
	ADD
		CONSTRAINT PK_REPORTED_REVIEW
		PRIMARY KEY (
			REPORTED_REVIEW_NO
		);

/* 신고당한 댓글 */
CREATE TABLE REPORTED_REPLY (
	REPORT_NO NUMBER(10) NOT NULL, /* 댓글 번호 */
	CATEGORY VARCHAR2(12) NOT NULL, /* 분류 */
	BBS_NO NUMBER NOT NULL, /* 새 컬럼 */
	REPLY_NO NUMBER NOT NULL, /* 새 컬럼2 */
	CONTENT CLOB NOT NULL, /* 내용 */
	STATE VARCHAR2(12) NOT NULL, /* 상태 */
	REASON VARCHAR2(18) NOT NULL, /* 이유 */
	REPORTED_DATE VARCHAR2(8) NOT NULL, /* 새 컬럼3 */
	REPORTER_ID VARCHAR2(11) NOT NULL /* 신고자 id */
);

ALTER TABLE REPORTED_REPLY
	ADD
		CONSTRAINT PK_REPORTED_REPLY
		PRIMARY KEY (
			REPORT_NO
		);

/* 자주 묻는 질문과 답변 */
CREATE TABLE FAQ (
	FAQ_NO NUMBER(10) NOT NULL, /* 게시물 번호 */
	FAQ_TITLE VARCHAR2(90) NOT NULL, /* 제목 */
	FAQ_CONTENT CLOB NOT NULL, /* 내용 */
	MEMBER_ID VARCHAR2(11) NOT NULL/* 회원_ID */
);

ALTER TABLE FAQ
	ADD
		CONSTRAINT PK_FAQ
		PRIMARY KEY (
			FAQ_NO
		);

/* 질문과답변 */
CREATE TABLE QNA (
	QNA_NO NUMBER(10) NOT NULL, /* 게시물 번호 */
	QNA_REFAMILY NUMBER(10), /* 새 컬럼 */
	QNA_RESTEP NUMBER(10), /* 새 컬럼2 */
	QNA_RELEVEL NUMBER(10), /* 새 컬럼3 */
	QNA_TITLE VARCHAR2(90) NOT NULL, /* 제목 */
	QNA_CATEGORY VARCHAR2(12) NOT NULL, /* 카테고리 */
	QNA_REGISTRATION_DATE VARCHAR2(8) NOT NULL, /* 등록일 */
	QNA_HITS NUMBER(10) NOT NULL, /* 조회수 */
	QNA_CONTENT CLOB NOT NULL, /* 내용 */
	MEMBER_ID VARCHAR2(11) NOT NULL /* 회원_ID */
);

ALTER TABLE QNA
	ADD
		CONSTRAINT PK_QNA
		PRIMARY KEY (
			QNA_NO
		);

/* 새 테이블 */
CREATE TABLE LOCATION (
	LOCATION_NO NUMBER(10) NOT NULL, /* 위치번호 */
	BUILDING_NAME VARCHAR2(30) NOT NULL, /* 건물명 */
	FLOOR VARCHAR2(2) NOT NULL /* 층 */
);

ALTER TABLE LOCATION
	ADD
		CONSTRAINT PK_LOCATION
		PRIMARY KEY (
			LOCATION_NO
		);

/* 새 테이블3 */
CREATE TABLE FIRST_CATEGORY (
	FIRST_CATEGORY_ID VARCHAR2(20) NOT NULL, /* 새 컬럼 */
	FIRST_CATEGORY_NAME VARCHAR2(100) NOT NULL, /* 새 컬럼2 */
	FIRST_CATEGORY_INFO CLOB /* 새 컬럼3 */
);

ALTER TABLE FIRST_CATEGORY
	ADD
		CONSTRAINT PK_FIRST_CATEGORY
		PRIMARY KEY (
			FIRST_CATEGORY_ID
		);

/* 새 테이블4 */
CREATE TABLE SECOND_CATEGORY (
	SECOND_CATEGORY_ID VARCHAR2(20) NOT NULL, /* 새 컬럼 */
	SECOND_CATEGORY_NAME VARCHAR2(100) NOT NULL, /* 새 컬럼2 */
	SECOND_CATEGORY_INFO CLOB, /* 새 컬럼3 */
	FIRST_CATEGORY_ID VARCHAR2(20) NOT NULL /* 새 컬럼4 */
);

ALTER TABLE SECOND_CATEGORY
	ADD
		CONSTRAINT PK_SECOND_CATEGORY
		PRIMARY KEY (
			SECOND_CATEGORY_ID
		);

/* 카테고리 */
CREATE TABLE REVIEW_RECOMMEND (
	REVIEW_NO NUMBER(10) NOT NULL, /* 새 컬럼 */
	MEMBER_ID VARCHAR2(11) NOT NULL /* 새 컬럼2 */
);

ALTER TABLE RESTAURANT
	ADD
		CONSTRAINT FK_LOCATION_TO_RESTAURANT
		FOREIGN KEY (
			LOCATION_NO
		)
		REFERENCES LOCATION (
			LOCATION_NO
		) on delete cascade;
		
ALTER TABLE RESTAURANT
	ADD
		CONSTRAINT FK_MEMBER_TO_RESTAURANT
		FOREIGN KEY (
			MEMBER_ID
		)
		REFERENCES MEMBER (
			MEMBER_ID
		) on delete cascade;

ALTER TABLE FOOD
	ADD
		CONSTRAINT FK_RESTAURANT_TO_FOOD
		FOREIGN KEY (
			RESTAURANT_NO
		)
		REFERENCES RESTAURANT (
			RESTAURANT_NO
		) on delete cascade;

ALTER TABLE RESTAURANT_REPLY
	ADD
		FOREIGN KEY (
			RESTAURANT_NO
		)
		REFERENCES RESTAURANT (
			RESTAURANT_NO
		)on delete cascade;

ALTER TABLE RESTAURANT_REPLY
	ADD
		CONSTRAINT FK_MEMBER_TO_RESTAURANT_REPLY
		FOREIGN KEY (
			MEMBER_ID
		)
		REFERENCES MEMBER (
			MEMBER_ID
		)on delete cascade;

ALTER TABLE REVIEW
	ADD
		CONSTRAINT FK_MEMBER_TO_REVIEW
		FOREIGN KEY (
			MEMBER_ID
		)
		REFERENCES MEMBER (
			MEMBER_ID
		)on delete cascade;


ALTER TABLE REVIEW_REPLY
	ADD
		CONSTRAINT FK_REVIEW_TO_REVIEW_REPLY
		FOREIGN KEY (
			REVIEW_NO
		)
		REFERENCES REVIEW (
			REVIEW_NO
		)on delete cascade;
		
		
ALTER TABLE REVIEW_RECOMMEND
	ADD
		FOREIGN KEY (
				MEMBER_ID
		)
		REFERENCES MEMBER (
				MEMBER_ID
		) on delete cascade;

		
ALTER TABLE REPORTED_REVIEW
	ADD
		CONSTRAINT FK_MEMBER_TO_REPORTED_REVIEW
		FOREIGN KEY (
			REPORTER_ID
		)
		REFERENCES MEMBER (
			MEMBER_ID
		)on delete cascade;

		
ALTER TABLE REPORTED_REVIEW
	ADD
		CONSTRAINT FK_REVIEW_TO_REPORTED_REVIEW
		FOREIGN KEY (
			BBS_NO
		)
		REFERENCES REVIEW (
			REVIEW_NO
		)on delete cascade;

		
ALTER TABLE REPORTED_REPLY
	ADD
		CONSTRAINT FK_MEMBER_TO_REPORTED_REPLY
		FOREIGN KEY (
			REPORTER_ID
		)
		REFERENCES MEMBER (
			MEMBER_ID
		)on delete cascade;

		
ALTER TABLE FAQ
	ADD
		CONSTRAINT FK_MEMBER_TO_FAQ
		FOREIGN KEY (
			MEMBER_ID
		)
		REFERENCES MEMBER (
			MEMBER_ID
		)on delete cascade;
		

ALTER TABLE QNA
	ADD
		FOREIGN KEY (
			MEMBER_ID
		)
		REFERENCES MEMBER (
			MEMBER_ID
		);

		
ALTER TABLE SECOND_CATEGORY
	ADD
		FOREIGN KEY (
			FIRST_CATEGORY_ID
		)
		REFERENCES FIRST_CATEGORY (
			FIRST_CATEGORY_ID
		);

		
ALTER TABLE REVIEW_RECOMMEND
	ADD
		FOREIGN KEY (
			MEMBER_ID
		)
		REFERENCES MEMBER (
			MEMBER_ID
		)on delete cascade;

		
ALTER TABLE REVIEW_RECOMMEND
	ADD
		CONSTRAINT FK_REVIEW_TO_REVIEW_RECOMMEND
		FOREIGN KEY (
			REVIEW_NO
		)
		REFERENCES REVIEW (
			REVIEW_NO
		)on delete cascade;
		
		
-- 고객센터에서 사용하는 시퀀스
drop sequence faq_no_seq;
drop sequence faq_no_qna;
drop sequence qna_no_seq;
create sequence faq_no_seq;
create sequence faq_no_qna;
create sequence qna_no_seq;
-- 맛집정보에서 사용하는 시퀀스
drop sequence restaurant_no_seq;
drop sequence food_no_seq;
drop sequence location_no_seq;
create sequence restaurant_no_seq;
create sequence food_no_seq;
create sequence location_no_seq;
--맛집정보댓글에서 사용하는 시퀀스
drop sequence restaurant_reply_no_seq;
create sequence restaurant_reply_no_seq;
-- 리뷰에서 사용하는 시퀀스
drop sequence review_no_seq;
create sequence review_no_seq;
-- 리뷰댓글에서 사용하는 시퀀스
drop sequence review_reply_no_seq;
create sequence review_reply_no_seq;
-- 리뷰신고게시물에서 사용하는 시퀀스
drop sequence reported_no_seq;
create sequence reported_no_seq;
-- 리뷰신고댓글에서 사용하는 시퀀스
drop sequence reportedreply_no_seq;
create sequence reportedreply_no_seq;
