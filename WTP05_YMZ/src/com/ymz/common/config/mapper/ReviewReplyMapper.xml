<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="review.dao.ReviewReplyMapper">

	<sql id="reply-select">
		select review_reply_no,
				  reg_date,
				  content,
				  member_id,
				  review_no
		from review_reply
	</sql>
	
	<resultMap type="reviewReply" id="reviewreply-resultmap">
		<id column="review_reply_no" property="replyNo"/>
		<result column="reg_date" property="regDate"/>
		<result column="content" property="content"/>
		<result column="member_id" property="memberId"/>
		<result column="review_no" property="reviewNo"/>
	</resultMap>
	
	<!-- 등록 -->
	<insert id="insertReply" parameterType="reviewreply">
		<selectKey keyProperty="replyNo" resultType="_int" order="BEFORE">
			select review_reply_no_seq.nextval from dual
		</selectKey>
		insert into review_reply(review_reply_no,
										  reg_date,
										  content,
										  member_id,
										  review_no)
		values (#{replyNo}, to_char(sysdate, 'yyyy-mm-dd HH24:MI:SS'), #{content, jdbcType=VARCHAR}, #{memberId}, #{reviewNo})
	</insert>
	
	<!-- 수정 -->
	<update id="updateReply" parameterType="reviewReply">
		update review_reply
		set        content=#{content}
		where   review_reply_no=#{replyNo} and member_id=#{memberId}
	</update>
	
	<!-- 삭제 -->
	<delete id="deleteReply" parameterType="reviewReply">
		delete from review_reply
		where  review_reply_no=#{replyNo} and member_id=#{memberId}
	</delete>
	
	<!-- 목록 tip : where쓰기; --> 
	<select id="selectAllReply"  resultMap="reviewreply-resultmap" parameterType="_int">
		<include refid="reply-select"/>
		where review_no=#{reviewNo}
	</select>
	

</mapper>
